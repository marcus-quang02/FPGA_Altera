library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity freq_measure is 
    port(
        clk_in  : in STD_LOGIC;
        clk     : in STD_LOGIC;
        reset   : in std_logic;
        freq_out: out STD_LOGIC_VECTOR(31 downto 0)
    );

end freq_measure;


architecture arch1 of freq_measure is 

signal count    : STD_LOGIC-STD_LOGIC_VECTOR( 31 downto 0 ) := ( others => '0');
signal ref_count: STD_LOGIC-STD_LOGIC_VECTOR( 31 downto 0 ) := ( others => '0');
signal frequency: STD_LOGIC-STD_LOGIC_VECTOR( 31 downto 0 ) := ( others => '0');
signal ref_clk_period : integer := 50000000;


begin
    process(clk)
    begin
        if( reset = '1') then 
            count <= (others => '0');
            ref_count <= (others => '0');
            frequency <= (others => '0');

    
            if rising_edge(clk) then
                if ref_count < ref_clk_period - 1 then
                    ref_count <= ref_count + 1;
                    if (rising_edge(clk_in)) then
                        count <= count + 1;
                    end if;

                else
                    ref_count <= (others => '0');
                    frequency <= count;
                    count <= (others => '0');
            end if ;
        end if; 
    end process;

    freq_out <= frequency;
end arch1;